@using SyllabusAutomation.Models;
@model Tuple<Course, List<Course>>
@{
    ViewBag.Title = "DeptCourseList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Breadcrumb navigation -->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">CourseList</li>
    </ol>

    <!-- Success message displayed after adding a mission -->
    @if (TempData["msg"] != null)
    {
        <div class="alert alert-success text-danger">
            @TempData["msg"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    <div class="panel-group" id="accordion">
        <div id="collapseThree" class="panel-collapse collapse">
            <div class="panel-body">
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-table"></i>
                        Add New Course for <strong>@ViewBag.year year</strong> ,<strong>@ViewBag.semester semester</strong> of <strong>@ViewBag.session</strong>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("AddDeptCourseList", "Course", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Course Code</h5>
                                        @Html.TextBoxFor(x => x.Item1.CourseCode, new { @class = "form-control", placeholder = "CSE-1101...", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Course Title</h5>
                                        @Html.TextBoxFor(x => x.Item1.CourseTitle, new { @class = "form-control", placeholder = "Fundamentals of Computer....", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Credit</h5>
                                        @Html.TextBoxFor(x => x.Item1.Credit, new { @class = "form-control", placeholder = "Numbers Only(3,1.5, etc..)", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.Credit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Teacher</h5>
                                        @Html.DropDownListFor(x => x.Item1.UserId, ViewBag.TeacherList as SelectList, "--- Select Teacher ---", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.UserId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Course Type</h5>
                                        @Html.DropDownListFor(x => x.Item1.CourseTypeId, ViewBag.CourseTypeList as SelectList, "--- Select Course Type ---", new { @class = "form-control", placeholder = "Numbers Only(10,8,etc)", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-10">
                                    <a href="@Url.Action("DeptCourseList","Course")" class="btn btn-outline-danger">Cancel</a>
                                    <input type="submit" class="btn btn-success" value="Save" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.data == true)
    {
        <div class="panel-group" id="accordion1">
            <div class="panel-body">
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-table"></i>
                        Edit Course of <strong>@ViewBag.year year</strong> ,<strong>@ViewBag.semester semester</strong> of <strong>@ViewBag.session</strong>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("UpdateDeptCourseList", "Course", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(x => x.Item1.CourseId)


                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Course Code</h5>
                                        @Html.TextBoxFor(x => x.Item1.CourseCode, new { @class = "form-control", placeholder = "CSE-1101...", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Course Title</h5>
                                        @Html.TextBoxFor(x => x.Item1.CourseTitle, new { @class = "form-control", placeholder = "Fundamentals of Computer....", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Credit</h5>
                                        @Html.TextBoxFor(x => x.Item1.Credit, new { @class = "form-control", placeholder = "Numbers Only(3,1.5, etc..)", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.Credit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Teacher</h5>
                                        @Html.DropDownListFor(x => x.Item1.UserId, ViewBag.TeacherList as SelectList, "--- Select Teacher ---", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.UserId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Course Type</h5>
                                        @Html.DropDownListFor(x => x.Item1.CourseTypeId, ViewBag.CourseTypeList as SelectList, "--- Select Course Type ---", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.CourseTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-10">
                                    <a href="@Url.Action("DeptCourseList","Course")" class="btn btn-outline-danger">Cancel</a>
                                    <input type="submit" class="btn btn-success" value="Update" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Display all missions of the university in a table -->
<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-book-open"></i>
        All Courses for <strong>@ViewBag.year year</strong> ,<strong>@ViewBag.semester semester</strong> .
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseThree" class="btn btn-info pull-right fa fa-plus">Add New</a>
    </div>
    <div class="card-body">
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-6">
                    <h5>Program</h5>
                    <strong>@ViewBag.program</strong>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-6">
                    <h5>Session</h5>
                    <strong>@ViewBag.session</strong>
                </div>
            </div>
        </div>
        <hr />
        <div class="table-responsive">
            <table class="table table-condensed table-hover table-bordered table-striped table" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Sr.No</th>
                        <th>Course Code</th>
                        <th>Course Title</th>
                        <th>Assigned Teacher</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Item2)
                    {
                        <tr>
                            <td>@(Model.Item2.IndexOf(item) + 1)</td>
                            <td>@item.CourseCode</td>
                            <td>@item.CourseTitle</td>
                            <td>@item.User.FirstName  @item.User.LastName</td>
                            <td>
                                <a href="@Url.Action("UpdateDeptCourseList", "Course", new { id = item.CourseId })" class="btn btn-info">Edit</a>
                                <a href="@Url.Action("CourseDetail", "Course", new { id = item.CourseId })" class="btn btn-success">Details</a>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <a href="@Url.Action("Selection", "Course")" class="btn btn-outline-danger">Change Year / Semester</a><br />
        </div>
    </div>
    
   
</div>
    
</div>

