@model SyllabusAutomation.Models.LearningPlan
@{
    ViewBag.Title = "CreateLearningPlan";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Success message displayed after adding a mission -->
@if (TempData["msg"] != null)
{
    <div class="alert alert-success text-danger">
        @TempData["msg"]
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
    </div>
}
<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@( Url.Action("Index", "Dashboard") )">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">Add Learning Plan</li>


    </ol>
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-table"></i>
            Add New Learning Plan
            @if (ViewBag.Saved == true)
            {
                <a href="@(Url.Action("LPCLO", "Course", new {id = (int)Session["planId"], cid = (int)Session["courseId"]}) )" class="btn btn-info pull-right fa fa-angle-double-right">Next</a>
            }

        </div>

        <div class="card-body ">

            @using (Html.BeginForm("CreateLearningPlan", "Course", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               
                @Html.HiddenFor(model => model.CourseId, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-6">
                    <div class="form-group">
                        @if (ViewBag.TimeLineId != null)
                        {
                            <div class="col-md-10">
                                <h6>Select Timeline</h6>
                                @Html.DropDownListFor(model => model.WeekId, ViewBag.TimeLineId as SelectList, "-- Select Timeline ---", new { @class = "form-control", required = "required" })
                            </div>
                        }
                    </div>
                </div>



                <div class="col-md-6">
                    <div class="form-group">

                        <div class="col-md-10">
                            <h6>Topics</h6>
                            @Html.TextAreaFor(model => model.Topics, new { cols = "60", rows = "5", htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Topics, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-6">
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <h6>Learning Outcome</h6>
                            @Html.EditorFor(model => model.LearningOutcome, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.LearningOutcome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="col-md-10">
                        <a onclick="window.history.back();" class="btn btn-danger">Cancel</a>
                        <input type="submit" class="btn btn-success" value="Save" />
                        <a class="btn btn-info pull-right" href="@Url.Action("LearningPlan", "Course", new {id=(int)Session["courseId"]})">Go To LearningPlanList</a>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


