@using SyllabusAutomation.Models;
@model Tuple<User, List<User>>
@{
    ViewBag.Title = "AssignedTeachers";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<div class="container-fluid">
    <!-- Breadcrumb navigation -->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">Assigned Teacher List</li>
    </ol>

    <!-- Success message displayed after adding a mission -->
    @if (TempData["msg"] != null)
    {
        <div class="alert alert-success text-danger">
            @TempData["msg"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }
    <div class="panel-group" id="accordion">
        <div id="collapseThree" class="panel-collapse collapse">
            <div class="panel-body">
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-table"></i>
                        Add New Teacher
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("AddNewTeacher", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Username</h5>
                                        @Html.TextBoxFor(x => x.Item1.Username, new { @class = "form-control", placeholder = "Username Here...", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.Username, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Password</h5>
                                        @Html.TextBoxFor(x => x.Item1.Password, new { @class = "form-control", placeholder = "Password Here....", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Name of Faculty</h5>
                                        @Html.DropDownList("FacultyId", null, "--- Select Faculty ---", new { @class = "form-control", required = "required", onchange = "BindDept()" })
                                        @Html.ValidationMessageFor(x => x.Item1.FacultyId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Name of Department</h5>
                                        @Html.DropDownList("DepartmentId", Enumerable.Empty<SelectListItem>(), "--- Select Department ---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Item1.DepartmentId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-10">
                                    <a href="@Url.Action("AssignedTeachers","Account")" class="btn btn-danger">Cancel</a>
                                    <input type="submit" class="btn btn-success" value="Save" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.data == true)
    {
        <div class="panel-group" id="accordion1">

            <div class="panel-body">
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-table"></i>
                        Edit Teacher
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("UpdateTeacher", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(x => x.Item1.UserID)
                            @Html.HiddenFor(x => x.Item1.UniversityId)
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Username</h5>
                                        @Html.TextBoxFor(x => x.Item1.Username, new { @class = "form-control", placeholder = "Username Here...", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Item1.Username, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Password</h5>
                                        @Html.TextBoxFor(x => x.Item1.Password, new { @class = "form-control", placeholder = "Password Here....", required = "required", type="password" })
                                        @Html.ValidationMessageFor(x => x.Item1.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Name of Faculty</h5>
                                        @Html.DropDownListFor(x => x.Item1.FacultyId, ViewBag.FacultyList as SelectList, "--- Select Faculty ---", new { @class = "form-control", required = "required", id = "facultyId" })
                                        @Html.ValidationMessageFor(x => x.Item1.FacultyId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <h5>Select Name of Department</h5>
                                        @Html.DropDownListFor(x => x.Item1.DepartmentId, Enumerable.Empty<SelectListItem>(), "--- Select Department ---", new { @class = "form-control", id = "departmentId" })
                                        @Html.ValidationMessageFor(model => model.Item1.DepartmentId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="col-md-10">
                                    <a href="@Url.Action("AssignedTeachers","Account")" class="btn btn-danger">Cancel</a>
                                    <input type="submit" class="btn btn-success" value="Update" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>
    }


    <!-- Display all missions of the university in a table -->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-book-open"></i>
            All Assigned Teachers List
            <a data-toggle="collapse" data-parent="#accordion" href="#collapseThree" class="btn btn-info pull-right fa fa-plus">Add New</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-condensed table-hover table-bordered table-striped table" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Serial No.</th>
                            <th>Username </th>
                            <th>Department</th>
                            <th>Faculty</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Item2)
                        {
                            <tr>
                                <td>@(Model.Item2.IndexOf(item) + 1)</td>
                                <td>@item.Username</td>
                                @if (item.FacultyId != null && item.DepartmentId != null)
                                {
                                    <td>@item.Department.ShortName</td>
                                    <td>@item.Faculty.ShortName</td>
                                }

                                <td>
                                    <a href="@Url.Action("UpdateTeacher", "Account", new { id = item.UserID })" class="btn btn-info">Edit</a>
                                    @*<a data-toggle="collapse" data-parent="#accordion1" class="btn btn-info" onclick="@Url.Action("UpdateTeacher", "Teacher", new { id = item.UserID })">Edit</a>*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    function BindDept() {
       
        var FacultyId = $('#FacultyId').val();
        $.ajax({
                    url: '@Url.Action("GetDepartmentsByFaculty", "Account")',
                    type: 'GET',
                    data: { facultyId: FacultyId },
                    success: function (data) {
                        // Clear existing Department options
                        $('#DepartmentId').empty();
                        
                        // Append new Department options
                        $.each(data, function (index, item) {
                            $('#DepartmentId').append($('<option>', {
                                value: item.DepartmentId,
                                text: item.DepartmentName
                            }));
                        });
                    }
                });
    }
</script>


@section scripts {
    <script>
        $(document).ready(function () {
            
            // On page load, get the initial selected Faculty value
            var selectedFaculty = $('#facultyId').val();

            // Fetch the Department options based on the selected Faculty
            fetchDepartments(selectedFaculty);

            // Handle onchange event of the Faculty dropdown
            $('#facultyId').change(function () {
                var facultyId = $(this).val();

                // Fetch the Department options based on the selected Faculty
                fetchDepartments(facultyId);
            });

            // Function to fetch the Department options based on the selected Faculty
            function fetchDepartments(facultyId){
                $.ajax({
                    url: '@Url.Action("FillDept", "Account")',
                    type: 'GET',
                    data: { facultyId: facultyId },
                    success: function (data) {
                        // Clear existing Department options
                        $('#departmentId').empty();
                       
                        // Append new Department options
                        $.each(data, function (index, item) {
                            $('#departmentId').append($('<option>', {
                                value: item.DepartmentId,
                                text: item.DepartmentName
                            }));
                        });
                    }
                });
            }
          
        });
       
    </script>
}
